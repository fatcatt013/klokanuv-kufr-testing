{
  "openapi": "3.0.2",
  "info": {
    "title": "",
    "version": ""
  },
  "paths": {
    "/tasks/": {
      "get": {
        "operationId": "listTasks",
        "description": "API endpoint that allows tasks to be viewed or edited.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Task"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "tasks"
        ]
      },
      "post": {
        "operationId": "createTask",
        "description": "API endpoint that allows tasks to be viewed or edited.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "tasks"
        ]
      }
    },
    "/tasks/{id}/": {
      "get": {
        "operationId": "retrieveTask",
        "description": "API endpoint that allows tasks to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique value identifying this task.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "tasks"
        ]
      },
      "put": {
        "operationId": "updateTask",
        "description": "API endpoint that allows tasks to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique value identifying this task.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "tasks"
        ]
      },
      "patch": {
        "operationId": "partialUpdateTask",
        "description": "API endpoint that allows tasks to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique value identifying this task.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "tasks"
        ]
      },
      "delete": {
        "operationId": "destroyTask",
        "description": "API endpoint that allows tasks to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique value identifying this task.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "tasks"
        ]
      }
    },
    "/subcategories/": {
      "get": {
        "operationId": "listSubcategorys",
        "description": "API endpoint that allows subcategories to be viewed or edited.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Subcategory"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "subcategories"
        ]
      },
      "post": {
        "operationId": "createSubcategory",
        "description": "API endpoint that allows subcategories to be viewed or edited.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subcategory"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Subcategory"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Subcategory"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subcategory"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "subcategories"
        ]
      }
    },
    "/subcategories/{id}/": {
      "get": {
        "operationId": "retrieveSubcategory",
        "description": "API endpoint that allows subcategories to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this subcategory.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subcategory"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "subcategories"
        ]
      },
      "put": {
        "operationId": "updateSubcategory",
        "description": "API endpoint that allows subcategories to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this subcategory.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subcategory"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Subcategory"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Subcategory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subcategory"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "subcategories"
        ]
      },
      "patch": {
        "operationId": "partialUpdateSubcategory",
        "description": "API endpoint that allows subcategories to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this subcategory.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subcategory"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Subcategory"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Subcategory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subcategory"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "subcategories"
        ]
      },
      "delete": {
        "operationId": "destroySubcategory",
        "description": "API endpoint that allows subcategories to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this subcategory.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "subcategories"
        ]
      }
    },
    "/categories/": {
      "get": {
        "operationId": "listCategorys",
        "description": "API endpoint that allows categories to be viewed or edited.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Category"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "categories"
        ]
      },
      "post": {
        "operationId": "createCategory",
        "description": "API endpoint that allows categories to be viewed or edited.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "categories"
        ]
      }
    },
    "/categories/{id}/": {
      "get": {
        "operationId": "retrieveCategory",
        "description": "API endpoint that allows categories to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this category.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "categories"
        ]
      },
      "put": {
        "operationId": "updateCategory",
        "description": "API endpoint that allows categories to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this category.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "categories"
        ]
      },
      "patch": {
        "operationId": "partialUpdateCategory",
        "description": "API endpoint that allows categories to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this category.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "categories"
        ]
      },
      "delete": {
        "operationId": "destroyCategory",
        "description": "API endpoint that allows categories to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this category.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "categories"
        ]
      }
    },
    "/assessment-types/": {
      "get": {
        "operationId": "listAssessmentTypes",
        "description": "API endpoint that allows assessment types to be viewed or edited.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AssessmentType"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "assessment-types"
        ]
      },
      "post": {
        "operationId": "createAssessmentType",
        "description": "API endpoint that allows assessment types to be viewed or edited.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssessmentType"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AssessmentType"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AssessmentType"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentType"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "assessment-types"
        ]
      }
    },
    "/assessment-types/{id}/": {
      "get": {
        "operationId": "retrieveAssessmentType",
        "description": "API endpoint that allows assessment types to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this assessment type.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentType"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "assessment-types"
        ]
      },
      "put": {
        "operationId": "updateAssessmentType",
        "description": "API endpoint that allows assessment types to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this assessment type.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssessmentType"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AssessmentType"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AssessmentType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentType"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "assessment-types"
        ]
      },
      "patch": {
        "operationId": "partialUpdateAssessmentType",
        "description": "API endpoint that allows assessment types to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this assessment type.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssessmentType"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AssessmentType"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AssessmentType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentType"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "assessment-types"
        ]
      },
      "delete": {
        "operationId": "destroyAssessmentType",
        "description": "API endpoint that allows assessment types to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this assessment type.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "assessment-types"
        ]
      }
    },
    "/assessments/": {
      "get": {
        "operationId": "listAssessments",
        "description": "API endpoint that allows assessments to be viewed or edited.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Assessment"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "assessments"
        ]
      },
      "post": {
        "operationId": "createAssessment",
        "description": "API endpoint that allows assessments to be viewed or edited.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Assessment"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Assessment"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Assessment"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assessment"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "assessments"
        ]
      }
    },
    "/assessments/{id}/": {
      "get": {
        "operationId": "retrieveAssessment",
        "description": "API endpoint that allows assessments to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assessment"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "assessments"
        ]
      },
      "put": {
        "operationId": "updateAssessment",
        "description": "API endpoint that allows assessments to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Assessment"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Assessment"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Assessment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assessment"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "assessments"
        ]
      },
      "patch": {
        "operationId": "partialUpdateAssessment",
        "description": "API endpoint that allows assessments to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Assessment"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Assessment"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Assessment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assessment"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "assessments"
        ]
      },
      "delete": {
        "operationId": "destroyAssessment",
        "description": "API endpoint that allows assessments to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "assessments"
        ]
      }
    },
    "/child-notes/": {
      "get": {
        "operationId": "listChildNotes",
        "description": "API endpoint that allows children notes to be viewed or edited.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ChildNote"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "child-notes"
        ]
      },
      "post": {
        "operationId": "createChildNote",
        "description": "API endpoint that allows children notes to be viewed or edited.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChildNote"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChildNote"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChildNote"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildNote"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "child-notes"
        ]
      }
    },
    "/child-notes/{id}/": {
      "get": {
        "operationId": "retrieveChildNote",
        "description": "API endpoint that allows children notes to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildNote"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "child-notes"
        ]
      },
      "put": {
        "operationId": "updateChildNote",
        "description": "API endpoint that allows children notes to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChildNote"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChildNote"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChildNote"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildNote"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "child-notes"
        ]
      },
      "patch": {
        "operationId": "partialUpdateChildNote",
        "description": "API endpoint that allows children notes to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChildNote"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChildNote"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChildNote"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildNote"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "child-notes"
        ]
      },
      "delete": {
        "operationId": "destroyChildNote",
        "description": "API endpoint that allows children notes to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "child-notes"
        ]
      }
    },
    "/class-notes/": {
      "get": {
        "operationId": "listClassroomNotes",
        "description": "API endpoint that allows classroom notes to be viewed or edited.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ClassroomNote"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "class-notes"
        ]
      },
      "post": {
        "operationId": "createClassroomNote",
        "description": "API endpoint that allows classroom notes to be viewed or edited.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClassroomNote"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ClassroomNote"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ClassroomNote"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomNote"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "class-notes"
        ]
      }
    },
    "/class-notes/{id}/": {
      "get": {
        "operationId": "retrieveClassroomNote",
        "description": "API endpoint that allows classroom notes to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomNote"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "class-notes"
        ]
      },
      "put": {
        "operationId": "updateClassroomNote",
        "description": "API endpoint that allows classroom notes to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClassroomNote"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ClassroomNote"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ClassroomNote"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomNote"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "class-notes"
        ]
      },
      "patch": {
        "operationId": "partialUpdateClassroomNote",
        "description": "API endpoint that allows classroom notes to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClassroomNote"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ClassroomNote"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ClassroomNote"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomNote"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "class-notes"
        ]
      },
      "delete": {
        "operationId": "destroyClassroomNote",
        "description": "API endpoint that allows classroom notes to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "class-notes"
        ]
      }
    },
    "/classes/": {
      "get": {
        "operationId": "listClassrooms",
        "description": "API endpoint that allows classrooms to be viewed or edited.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Classroom"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "classes"
        ]
      },
      "post": {
        "operationId": "createClassroom",
        "description": "API endpoint that allows classrooms to be viewed or edited.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Classroom"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Classroom"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Classroom"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Classroom"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "classes"
        ]
      }
    },
    "/classes/{id}/": {
      "get": {
        "operationId": "retrieveClassroom",
        "description": "API endpoint that allows classrooms to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Classroom"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "classes"
        ]
      },
      "put": {
        "operationId": "updateClassroom",
        "description": "API endpoint that allows classrooms to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Classroom"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Classroom"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Classroom"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Classroom"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "classes"
        ]
      },
      "patch": {
        "operationId": "partialUpdateClassroom",
        "description": "API endpoint that allows classrooms to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Classroom"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Classroom"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Classroom"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Classroom"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "classes"
        ]
      },
      "delete": {
        "operationId": "destroyClassroom",
        "description": "API endpoint that allows classrooms to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "classes"
        ]
      }
    },
    "/children/": {
      "get": {
        "operationId": "listChilds",
        "description": "API endpoint that allows children to be viewed or edited.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Child"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "children"
        ]
      },
      "post": {
        "operationId": "createChild",
        "description": "API endpoint that allows children to be viewed or edited.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Child"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Child"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Child"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Child"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "children"
        ]
      }
    },
    "/children/{id}/": {
      "get": {
        "operationId": "retrieveChild",
        "description": "API endpoint that allows children to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Child"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "children"
        ]
      },
      "put": {
        "operationId": "updateChild",
        "description": "API endpoint that allows children to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Child"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Child"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Child"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Child"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "children"
        ]
      },
      "patch": {
        "operationId": "partialUpdateChild",
        "description": "API endpoint that allows children to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Child"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Child"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Child"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Child"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "children"
        ]
      },
      "delete": {
        "operationId": "destroyChild",
        "description": "API endpoint that allows children to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "children"
        ]
      }
    },
    "/user/": {
      "get": {
        "operationId": "listUsers",
        "description": "API endpoint that allows users to be viewed or edited.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "user"
        ]
      },
      "post": {
        "operationId": "createUser",
        "description": "API endpoint that allows users to be viewed or edited.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/user/{id}/": {
      "get": {
        "operationId": "retrieveUser",
        "description": "API endpoint that allows users to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "user"
        ]
      },
      "put": {
        "operationId": "updateUser",
        "description": "API endpoint that allows users to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "user"
        ]
      },
      "patch": {
        "operationId": "partialUpdateUser",
        "description": "API endpoint that allows users to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "user"
        ]
      },
      "delete": {
        "operationId": "destroyUser",
        "description": "API endpoint that allows users to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/school/": {
      "get": {
        "operationId": "listSchools",
        "description": "API endpoint that allows schools to be viewed or edited.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/School"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "school"
        ]
      },
      "post": {
        "operationId": "createSchool",
        "description": "API endpoint that allows schools to be viewed or edited.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/School"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/School"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/School"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/School"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "school"
        ]
      }
    },
    "/school/{id}/": {
      "get": {
        "operationId": "retrieveSchool",
        "description": "API endpoint that allows schools to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/School"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "school"
        ]
      },
      "put": {
        "operationId": "updateSchool",
        "description": "API endpoint that allows schools to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/School"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/School"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/School"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/School"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "school"
        ]
      },
      "patch": {
        "operationId": "partialUpdateSchool",
        "description": "API endpoint that allows schools to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/School"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/School"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/School"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/School"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "school"
        ]
      },
      "delete": {
        "operationId": "destroySchool",
        "description": "API endpoint that allows schools to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "school"
        ]
      }
    },
    "/api/token/": {
      "post": {
        "operationId": "createTokenObtainPair",
        "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenObtainPair"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenObtainPair"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TokenObtainPair"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenObtainPair"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/token/refresh/": {
      "post": {
        "operationId": "createTokenRefresh",
        "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefresh"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefresh"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefresh"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenRefresh"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "parent_task": {
            "type": "string",
            "nullable": true
          },
          "subcategory": {
            "type": "integer",
            "nullable": true
          },
          "codename": {
            "type": "string",
            "nullable": true,
            "maxLength": 20
          },
          "assessment_type": {
            "type": "integer"
          },
          "task_description": {
            "type": "string"
          },
          "difficulty": {
            "enum": [
              "EASIER",
              "SAME",
              "HARDER"
            ],
            "type": "string",
            "nullable": true
          },
          "expected_age_from": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.01,
            "maximum": 1000,
            "minimum": -1000,
            "nullable": true
          },
          "expected_age_to": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.01,
            "maximum": 1000,
            "minimum": -1000,
            "nullable": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "id",
          "assessment_type",
          "task_description"
        ]
      },
      "Subcategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "label": {
            "type": "string",
            "maxLength": 100
          },
          "url": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "label"
        ]
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "label": {
            "type": "string",
            "maxLength": 100
          },
          "subcategories": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "url": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "label",
          "subcategories"
        ]
      },
      "AssessmentType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "label": {
            "type": "string",
            "maxLength": 100
          },
          "allows_note": {
            "type": "boolean"
          },
          "options": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "readOnly": true
                },
                "label": {
                  "type": "string",
                  "maxLength": 100
                }
              },
              "required": [
                "label"
              ]
            },
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "label"
        ]
      },
      "Assessment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "task": {
            "type": "string"
          },
          "child": {
            "type": "integer"
          },
          "option": {
            "type": "integer"
          },
          "date_of_assessment": {
            "type": "string",
            "format": "date"
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "assessed_by": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "task",
          "child",
          "option",
          "date_of_assessment"
        ]
      },
      "ChildNote": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "child": {
            "type": "integer"
          },
          "note": {
            "type": "string"
          },
          "created_by": {
            "type": "string",
            "readOnly": true
          },
          "updated_by": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "child",
          "note"
        ]
      },
      "ClassroomNote": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "classroom": {
            "type": "integer"
          },
          "note": {
            "type": "string"
          },
          "created_by": {
            "type": "string",
            "readOnly": true
          },
          "updated_by": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "classroom",
          "note"
        ]
      },
      "Classroom": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "label": {
            "type": "string"
          },
          "school": {
            "type": "integer"
          },
          "children": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "notes": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "url": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "label",
          "school",
          "children",
          "notes"
        ]
      },
      "Child": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "birthdate": {
            "type": "string",
            "format": "date"
          },
          "gender": {
            "enum": [
              "M",
              "F"
            ],
            "type": "string"
          },
          "notes": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "url": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "first_name",
          "last_name",
          "birthdate",
          "gender",
          "notes"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "password": {
            "type": "string",
            "maxLength": 128
          },
          "last_login": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "is_superuser": {
            "type": "boolean",
            "description": "Designates that this user has all permissions without explicitly assigning them."
          },
          "first_name": {
            "type": "string",
            "maxLength": 150
          },
          "last_name": {
            "type": "string",
            "maxLength": 150
          },
          "is_active": {
            "type": "boolean",
            "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts."
          },
          "date_joined": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 254
          },
          "is_staff": {
            "type": "boolean",
            "description": "Designates whether the user can log into this admin site. Please leave this on unless really necessary."
          },
          "school": {
            "type": "integer"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "The groups this user belongs to. A user will get all permissions granted to each of their groups."
          },
          "user_permissions": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "Specific permissions for this user."
          }
        },
        "required": [
          "password",
          "email"
        ]
      },
      "School": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "address": {
            "type": "string",
            "maxLength": 250
          },
          "url": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "name"
        ]
      },
      "TokenObtainPair": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "writeOnly": true
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "TokenRefresh": {
        "type": "object",
        "properties": {
          "refresh": {
            "type": "string"
          },
          "access": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "refresh"
        ]
      }
    }
  }
}
